apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: zk-headlessserver
  labels:
    svcname: zk-elect
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: zk-clientserver
  labels:
    svcname: zk-client
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: default
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1  # 最大不可用Pod数
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: zk
  labels:
    sts: zk      # 这是sts的标签。没特殊需求可以不要
spec:
  selector:      # 这里的选择器是和StatefulSet下template的labels。层级为：sts.spec.template.metadata.labels.app
    matchLabels:
      app: zk
  serviceName: zk-headlessserver
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: zk    # 这里是和当前sts中上面matchLabels上的app:zk相同
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - zk
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: zookeeper
        imagePullPolicy: Never
        image: "registry.cn-hangzhou.aliyuncs.com/allenjol_containers/zookeeper:v1.0-3.4.10"
        resources:
          requests:
            memory: "256Mi"
            cpu: "0.1"
          limits:
              cpu: "1"
              memory: "1Gi"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=20000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=512M \
          --max_client_cnxns=60000 \
          --snap_retain_count=50 \
          --purge_interval=1 \
          --log_level=INFO"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      imagePullSecrets:
        - name: zk-secret         # 这里填写创建的secret名字。由于我这里把zk镜像放到了自己私有镜像仓库，所以需要添加docker拉取镜像的secret.
      restartPolicy: Always
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:           # 这里可以理解为PVC模板。
  - metadata:
      namespace: default
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "course-nfs-storage"   # 测试环境用NFS作为后端存储。所以这里指定NFS的SC名字
      resources:
        requests:
          storage: 10Gi
